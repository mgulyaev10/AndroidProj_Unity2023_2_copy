apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'

dependencies {
    api 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // This dependency is downloaded from the Google’s Maven repository.
    // Make sure you also include that repository in your project's build.gradle file.
    api "com.google.android.play:feature-delivery:2.0.0"

    // For Kotlin users, also import the Kotlin extensions library for Play Feature Delivery:
    api "com.google.android.play:feature-delivery-ktx:2.0.0"

    // This dependency is downloaded from the Google’s Maven repository.
    // So, make sure you also include that repository in your project's build.gradle file.
    api("com.google.android.play:asset-delivery:2.0.0")

    // For Kotlin users also import the Kotlin extensions library for Play Asset Delivery:
    api("com.google.android.play:asset-delivery-ktx:2.0.0")
}

android {
    compileSdkVersion 32
    buildToolsVersion '32.0.0'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        applicationId 'com.template.jellymerge'
        versionName '1.2.2'
        minSdkVersion 22
        targetSdkVersion 32
        versionCode 1

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        ignoreAssetsPattern = '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', '.bundle', '.unityexp'] + unityStreamingAssets.tokenize(', ')
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
        doNotStrip '*/arm64-v8a/*.so'
    }

    buildTypes {
        debug {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            jniDebuggable = true
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.debug
        }
    }

    androidComponents {
        onVariants(selector().all(), { variant ->
            variant.bundleConfig.addMetadataFile(
                "com.unity",
                project.layout.file(project.providers.provider { new File("dependencies.pb") })
            )
            variant.bundleConfig.addMetadataFile(
                "com.unity",
                project.layout.file(project.providers.provider { new File("app-metadata.properties") })
            )
        })
    }

    bundle {
        language {
            enableSplit = false
        }

        density {
            enableSplit = false
        }

        abi {
            enableSplit = true
        }

        texture {
            enableSplit = true
        }
    }

    dynamicFeatures = [
            ":unityLibrary3",
    ]
}